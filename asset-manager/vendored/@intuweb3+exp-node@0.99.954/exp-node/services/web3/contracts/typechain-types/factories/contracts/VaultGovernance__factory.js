/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, utils } from "ethers";
const _abi = [
    {
        inputs: [],
        name: "AlreadyVoted",
        type: "error",
    },
    {
        inputs: [],
        name: "ExecuteProposalReverted",
        type: "error",
    },
    {
        inputs: [],
        name: "OnlyCreatorCanCancel",
        type: "error",
    },
    {
        inputs: [],
        name: "ProposalAlreadyExecuted",
        type: "error",
    },
    {
        inputs: [],
        name: "ProposalCancelled",
        type: "error",
    },
    {
        inputs: [],
        name: "ProposalExpired",
        type: "error",
    },
    {
        inputs: [],
        name: "ProposalInProcess",
        type: "error",
    },
    {
        inputs: [],
        name: "VoteRequirementNotReached",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "enum VaultGovernance.PropositionType",
                name: "_type",
                type: "uint8",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "ProposalCreated",
        type: "event",
    },
    {
        inputs: [],
        name: "PROPOSAL_IN_PROCESS",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "PROPOSAL_VOTE_DURATION",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getProposalCounter",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "proposalId",
                type: "uint256",
            },
        ],
        name: "proposalInfos",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "id",
                        type: "uint256",
                    },
                    {
                        internalType: "uint8",
                        name: "voteForNeeded",
                        type: "uint8",
                    },
                    {
                        internalType: "uint8",
                        name: "voteForCount",
                        type: "uint8",
                    },
                    {
                        internalType: "bool",
                        name: "executed",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "cancelled",
                        type: "bool",
                    },
                    {
                        internalType: "bytes",
                        name: "_calldata",
                        type: "bytes",
                    },
                    {
                        internalType: "uint256",
                        name: "endTime",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "feeValue",
                        type: "uint256",
                    },
                    {
                        internalType: "address",
                        name: "creator",
                        type: "address",
                    },
                ],
                internalType: "struct VaultGovernance.Proposal",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "proposalId",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "user",
                type: "address",
            },
        ],
        name: "proposalVoteUserInfos",
        outputs: [
            {
                internalType: "enum VaultGovernance.VoteState",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
export class VaultGovernance__factory {
    static abi = _abi;
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
